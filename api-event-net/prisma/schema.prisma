generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  common
  admin
}

enum EventRole {
  owner
  speaker
  participant
}

enum ChatType {
  private
  event
}

enum MessageStatus {
  delivered
  received
  readed
}

model User {
  id       String   @id @default(uuid())
  name     String
  email    String
  password String
  phone    String
  role     UserRole @default(common)

  Address   Address[]
  Profile   Profile[]
  UserEvent UserEvent[]
  Chat      Chat[]
  Message   Message[]
}

model Address {
  id           String @id @default(uuid())
  city         String
  state        String
  neighborhood String
  userId       String @map("user_id")

  user User @relation(fields: [userId], references: [id])
}

model Profile {
  id        String  @id @default(uuid())
  bio       String?
  avatar    String?
  github    String?
  linkedin  String?
  instagram String?
  userId    String  @map("user_id")

  user User @relation(fields: [userId], references: [id])
}

model Event {
  id             String   @id @default(uuid())
  title          String
  description    String
  start_datetime DateTime
  end_datetime   DateTime
  location       String
  qr_code        String
  image          String

  UserEvent UserEvent[]
  Chat      Chat[]
}

model UserEvent {
  id      String    @id @default(uuid())
  userId  String    @map("user_id")
  eventId String    @map("event_id")
  role    EventRole @default(participant)

  user  User  @relation(fields: [userId], references: [id])
  event Event @relation(fields: [eventId], references: [id])
}

model Chat {
  id          String   @id @default(uuid())
  recipientId String   @map("recipient_id")
  eventId     String   @map("event_id")
  type        ChatType

  user    User      @relation(fields: [recipientId], references: [id])
  event   Event     @relation(fields: [eventId], references: [id])
  Message Message[]
}

model Message {
  id       String        @id @default(uuid())
  content  String
  dateTime DateTime      @map("date_time")
  senderId String        @map("sender_id")
  chatId   String        @map("chat_id")
  status   MessageStatus @default(delivered)

  user User @relation(fields: [senderId], references: [id])
  chat Chat @relation(fields: [chatId], references: [id])
}
